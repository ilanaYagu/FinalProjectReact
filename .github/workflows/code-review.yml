name: Code Review
on: pull_request
jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Generate code review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          mkdir -p reviews
          find src -type f \( -name "*.ts" -o -name "*.tsx" \) | while read file; do
          FILE_CONTENT=$(cat "$file" | jq -Rs .)
          curl -s -H "Content-Type: application/json" \
          -H "Authorization: Bearer $OPENAI_API_KEY" \
          -d '{
            "model": "text-davinci-002",
            "prompt": "Review the following TypeScript code in a React application file '$file': ${FILE_CONTENT} ",
            "temperature": 0.5,
            "max_tokens":200,
            "frequency_penalty":0,
            "presence_penalty":0,
            "top_p": 1
           }'
          -X POST https://api.openai.com/v1/engines/davinci-codex/completions \
          > "reviews/review_$(basename $file).json"
          cat "reviews/review_$(basename $file).json"

          done
      - name: Create review comments
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          PR_ID=$(jq --raw-output .number $GITHUB_EVENT_PATH)
          COMMIT_ID=$(jq --raw-output .pull_request.head.sha $GITHUB_EVENT_PATH)
          find src -type f \( -name "*.ts" -o -name "*.tsx" \) | while read file; do
            REVIEW=$(cat "reviews/review_$(basename $file).json" | jq -r '.choices[0].text')
            echo "DEBUG: REVIEW=$REVIEW"
            PAYLOAD=$(echo '{}' | jq --arg path "$file" --arg body "$REVIEW" '.path = $path | .body = $body')
            echo "DEBUG: PAYLOAD=$PAYLOAD"
            LINES=$(grep -n ".*" "$file" | cut -f1 -d:)
            for LINE in $LINES; do
              COMMENT_PAYLOAD=$(echo '{}' | jq --argjson line $LINE --argjson position $LINE --argjson body "$PAYLOAD" '.body = $body | .position = $position | .line = $line')
              COMMIT_COMMENTS_URL="https://api.github.com/repos/${{ github.repository }}/commits/$COMMIT_ID/comments"
              curl -s -H "Authorization: token $GITHUB_TOKEN" \
               -H "Content-Type: application/json" \
               -d "$COMMENT_PAYLOAD" \
               -X POST $COMMIT_COMMENTS_URL
            done
          done
