name: Code Review
on: pull_request
jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Generate code review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          mkdir -p reviews
          find src -type f \( -name "*.ts" -o -name "*.tsx" \) | while read file; do
          FILE_CONTENT=$(cat "$file")
          curl -s -H "Content-Type: application/json" \
           -H "Authorization: Bearer $OPENAI_API_KEY" \
           -d "{\"model\": \"text-davinci-002\", \"prompt\": \"Review the following TypeScript code in a React application file '$file':\n\n${FILE_CONTENT}\", \"max_tokens\": 200, \"n\": 1, \"stop\": null, \"temperature\": 0.5, \"top_p\": 1, \"frequency_penalty\": 0, \"presence_penalty\": 0}" \
           -X POST https://api.openai.com/v1/engines/davinci-codex/completions \
           > "reviews/review_$(basename $file).json"
          done
      - name: Create review comments
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          PR_ID=$(jq --raw-output .number $GITHUB_EVENT_PATH)
          COMMIT_ID=$(jq --raw-output .pull_request.head.sha $GITHUB_EVENT_PATH)
          find src -type f \( -name "*.ts" -o -name "*.tsx" \) | while read file; do
          REVIEW=$(cat "reviews/review_$(basename $file).json" | jq -r '.choices[0].text')
          COMMENT_BODY=$(echo -e "OpenAI Code Review:\n\n\`\`\`\n${REVIEW}\n\`\`\`")
          PAYLOAD=$(echo '{}' | jq --arg path "$file" --argjson position 1 --arg body "$COMMENT_BODY" --arg commit_id "$COMMIT_ID" '.path = $path | .position = $position | .body = $body | .commit_id = $commit_id')
          REVIEW_COMMENTS_URL=$(jq -r '.pull_request.review_comments_url' $GITHUB_EVENT_PATH)
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d "$PAYLOAD" \
          -X POST $REVIEW_COMMENTS_URL
          done
