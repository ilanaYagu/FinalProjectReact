name: Code Review
on: pull_request
jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Generate code review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          mkdir -p reviews
          find src -type f \( -name "*.ts" -o -name "*.tsx" \) | while read file; do
          FILE_CONTENT=$(cat "$file")
          curl -s -H "Content-Type: application/json" \
           -H "Authorization: Bearer $OPENAI_API_KEY" \
           -d "{\"model\": \"text-davinci-002\", \"prompt\": \"Review the following TypeScript code in a React application file '$file':\n\n${FILE_CONTENT}\", \"max_tokens\": 200, \"n\": 1, \"stop\": null, \"temperature\": 0.5, \"top_p\": 1, \"frequency_penalty\": 0, \"presence_penalty\": 0}" \
           -X POST https://api.openai.com/v1/engines/davinci-codex/completions \
           > "reviews/review_$(basename $file).json"
          done
      - name: Create comments
        run: |
          find src -type f \( -name "*.ts" -o -name "*.tsx" \) | while read file; do
          REVIEW=$(cat "reviews/review_$(basename $file).json" | jq -r '.choices[0].text')
          COMMENT_BODY=$(echo -e "OpenAI Code Review:\n\n\`\`\`\n${REVIEW}\n\`\`\`")
          echo "COMMENT_BODY=$COMMENT_BODY" >> $GITHUB_ENV
          done
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      - name: Post review comments
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{owner}/{repo}/issues/{issue_number}/comments
          mediaType: '{"previews": ["comfort-fade"]}'
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          issue_number: ${{ github.event.number }}
          body: ${{ env.COMMENT_BODY }}
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
